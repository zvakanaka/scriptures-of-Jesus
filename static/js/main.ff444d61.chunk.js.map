{"version":3,"sources":["ColorModeToggle.jsx","TopicalHeading.jsx","Page.jsx","App.js","index.js"],"names":["ColorModeToggle","_useColorMode","useColorMode","colorMode","toggleColorMode","react_default","a","createElement","IconButton","onClick","icon","variantColor","aria-label","concat","TopicalHeading","_ref","heading","count","listItems","onCheck","storageMirror","_useState","useState","_useState2","Object","slicedToArray","isExpanded","setIsExpanded","_useState3","map","_ref2","i","key","_useState4","checkedItems","setCheckedItems","allChecked","every","Boolean","isIndeterminate","some","Accordion","onChange","Box","flex","textAlign","Flex","Checkbox","pr","isChecked","e","_ref3","target","checked","Heading","as","size","filter","length","pb","List","spacing","style","marginLeft","li","arr","item","j","nodes","node","tag","Link","color","href","isExternal","text","Page","children","theme","useTheme","bgColor","light","colors","white","dark","gray","black","background","guideRefKeys","data","guideRefs","flatMap","guideRef","ul","reduce","acc","cur","localStorageItem","localStorage","getItem","getNumCheckedItems","rootElement","document","getElementById","ReactDOM","render","totalItems","className","ThemeProvider","CSSReset","ColorModeProvider","src_Page","p","justify","Math","round","src_ColorModeToggle","src_TopicalHeading","source","display","setTimeout","storedItem","setItem","Date","removeItem"],"mappings":"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","file":"static/js/main.ff444d61.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { IconButton, useColorMode } from \"@chakra-ui/core\";\n\nfunction ColorModeToggle() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <header>\n      <IconButton\n        onClick={toggleColorMode}\n        icon={colorMode === \"light\" ? \"moon\" : \"sun\"}\n        variantColor=\"blue\"\n        aria-label={`Change to ${\n          colorMode === \"light\" ? \"dark\" : \"light\"\n        } mode`}\n      />\n    </header>\n  );\n}\n\nexport default ColorModeToggle;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Checkbox,\n  List,\n  ListItem,\n  Link,\n  // Icon,\n  AccordionItem,\n  AccordionHeader,\n  AccordionPanel,\n  AccordionIcon,\n  Heading,\n  Flex,\n  useColorMode\n} from \"@chakra-ui/core\";\n\nfunction TopicalHeading({ heading, count, listItems, onCheck, storageMirror }) {\n  const [isExpanded, setIsExpanded] = useState(() => false);\n  const [checkedItems, setCheckedItems] = useState(\n    listItems.map(({ key }, i) => storageMirror[key])\n  );\n\n  function updateCheckedItems(arr, key, checked) {\n    onCheck(key, checked);\n    setCheckedItems(arr);\n  }\n\n  const allChecked = checkedItems.every(Boolean);\n  const isIndeterminate = checkedItems.some(Boolean) && !allChecked;\n\n  const { colorMode } = useColorMode();\n\n  return (\n    <AccordionItem onChange={() => setIsExpanded(!isExpanded)}>\n      <AccordionHeader>\n        <Box flex=\"1\" textAlign=\"left\">\n          <Flex>\n            <Checkbox\n              pr={3}\n              isChecked={allChecked}\n              isIndeterminate={isIndeterminate}\n              onChange={e =>\n                setCheckedItems(\n                  listItems.map(({ key }) => {\n                    onCheck(key, e.target.checked);\n                    return e.target.checked;\n                  })\n                )\n              }\n            />\n            <Heading as=\"h2\" size=\"lg\">\n              {heading} <span>{checkedItems.filter(Boolean).length}</span>/\n              <span>{count}</span>\n            </Heading>\n          </Flex>\n        </Box>\n        <AccordionIcon />\n      </AccordionHeader>\n\n      {isExpanded ? (\n        <AccordionPanel pb={4}>\n          <List spacing={1} style={{ marginLeft: \"25px\" }}>\n            {listItems.map((li, i) => {\n              return (\n                <ListItem key={li.key}>\n                  <Checkbox\n                    key={li.key}\n                    isChecked={checkedItems[i]}\n                    onChange={e =>\n                      updateCheckedItems(\n                        checkedItems.map((item, j) =>\n                          i === j ? e.target.checked : item\n                        ),\n                        li.key,\n                        e.target.checked\n                      )\n                    }\n                  >\n                    {li.nodes.map(node => {\n                      if (node.tag === \"A\") {\n                        return (\n                          <Link\n                            color={\n                              colorMode === \"dark\" ? \"blue.300\" : \"blue.500\"\n                            }\n                            key={node.href}\n                            isExternal\n                            href={node.href}\n                          >\n                            {node.text}\n                            {/* <Icon name=\"external-link\" mx=\"2px\" /> */}\n                          </Link>\n                        );\n                      } else return node.text;\n                    })}\n                  </Checkbox>\n                </ListItem>\n              );\n            })}\n          </List>\n        </AccordionPanel>\n      ) : null}\n    </AccordionItem>\n  );\n}\n\nexport default TopicalHeading;\n","import React from \"react\";\nimport { useColorMode, useTheme } from \"@chakra-ui/core\";\n\nfunction Page({ children }) {\n  const { colorMode } = useColorMode();\n  const theme = useTheme();\n  const bgColor = {\n    light: theme.colors.white,\n    dark: theme.colors.gray[\"800\"]\n  };\n  const color = { light: theme.colors.black, dark: theme.colors.white };\n  const style = {\n    background: bgColor[colorMode],\n    color: color[colorMode]\n  };\n  return <div style={style}>{children}</div>;\n}\n\nexport default Page;\n","// https://www.churchofjesuschrist.org/blog/i-studied-more-than-2200-scriptures-about-the-savior-in-six-weeks-here-is-a-little-of-what-i-learned?lang=eng\n// https://www.churchofjesuschrist.org/broadcasts/article/worldwide-devotionals/2017/01/prophets-leadership-and-divine-law?lang=eng\n// https://tech.churchofjesuschrist.org/forum/viewtopic.php?t=28362\n// https://ldsperspectives.com/2019/12/04/jesus-christ-in-the-topical-guide-with-stephanie-dibb-sorensen/\n// https://www.churchofjesuschrist.org/study/general-conference/2017/04/drawing-the-power-of-jesus-christ-into-our-lives?lang=eng\n// https://scriptures.byu.edu/\n// https://www.churchofjesuschrist.org/study/scriptures/tg/jesus-christ?lang=eng\n// https://thirdhour.org/forums/topic/61247-elder-nelsons-2200-scripture-challenge/\n\nimport React, { useState } from \"react\";\nimport {\n  Accordion,\n  ThemeProvider,\n  CSSReset,\n  ColorModeProvider,\n  Heading,\n  Flex,\n  Link\n} from \"@chakra-ui/core\";\nimport ColorModeToggle from \"./ColorModeToggle\";\nimport TopicalHeading from \"./TopicalHeading\";\nimport Page from \"./Page\";\nimport data from \"./data/output.json\";\n\nconst guideRefKeys = data.guideRefs\n  .flatMap(guideRef => guideRef.ul)\n  .map(({ key }) => key)\n\n// for faster lookups\nconst storageMirror = guideRefKeys\n  .reduce((acc, cur) => {\n    const localStorageItem = localStorage.getItem(cur)\n    if (localStorageItem) {\n      acc[cur] = localStorageItem\n    }\n    return acc\n  }, {})\n\nfunction onCheck(key, checked) {\n  if (checked) storageMirror[key] = true\n  else delete storageMirror[key]\n\n   setTimeout(() => {\n     const storedItem = localStorage.getItem(key);\n     checked && !storedItem\n     ? localStorage.setItem(key, new Date())\n     : localStorage.removeItem(key);\n  })\n}\n\nconst getNumCheckedItems = () => {\n  return guideRefKeys\n    .map(key => storageMirror[key])\n    .filter(Boolean).length\n}\n\nexport default function App() {\n  const [checkedItems, setCheckedItems] = useState(getNumCheckedItems)\n  const totalItems = data.guideRefs.reduce((acc, cur) => acc + cur.length, 0)\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider>\n        <CSSReset />\n        <ColorModeProvider>\n          <Page>\n            <Heading p={3}>\n              <Flex justify=\"space-between\">\n                <Link\n                  isExternal\n                  href=\"https://www.churchofjesuschrist.org/blog/i-studied-more-than-2200-scriptures-about-the-savior-in-six-weeks-here-is-a-little-of-what-i-learned\"\n                >\n                  Scriptures of Jesus Christ\n                  {' '}<span>({Math.round(checkedItems / totalItems * 100)}%)</span>\n                </Link>\n                <ColorModeToggle />\n              </Flex>\n            </Heading>\n            <Accordion>\n              {data.guideRefs.map((guideRef) => {\n                return (\n                  <TopicalHeading\n                    key={guideRef.source}\n                    heading={guideRef.display}\n                    count={guideRef.length}\n                    listItems={guideRef.ul}\n                    storageMirror={storageMirror}\n                    onCheck={(key, checked) => {\n                      onCheck(key, checked)\n                      setCheckedItems(getNumCheckedItems())\n                    }}\n                  />\n                );\n              })}\n            </Accordion>\n          </Page>\n        </ColorModeProvider>\n      </ThemeProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}