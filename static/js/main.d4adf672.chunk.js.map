{"version":3,"sources":["ColorModeToggle.jsx","TopicalHeading.jsx","Page.jsx","App.js","index.js"],"names":["ColorModeToggle","_useColorMode","useColorMode","colorMode","toggleColorMode","react_default","a","createElement","IconButton","onClick","icon","variantColor","aria-label","concat","TopicalHeading","_ref","heading","count","listItems","onCheck","_useState","useState","_useState2","Object","slicedToArray","isExpanded","setIsExpanded","_useState3","map","_ref2","key","localStorage","getItem","_useState4","checkedItems","setCheckedItems","allChecked","every","Boolean","isIndeterminate","some","Accordion","onChange","Box","flex","textAlign","Flex","Checkbox","pr","isChecked","e","_ref3","target","checked","Heading","as","size","filter","length","pb","List","spacing","style","marginLeft","li","i","arr","item","j","nodes","node","tag","Link","color","href","isExternal","text","Page","children","theme","useTheme","bgColor","light","colors","white","dark","gray","black","background","storedItem","setItem","Date","removeItem","rootElement","document","getElementById","ReactDOM","render","className","ThemeProvider","CSSReset","ColorModeProvider","src_Page","p","justify","src_ColorModeToggle","data","guideRefs","guideRef","src_TopicalHeading","source","display","ul"],"mappings":"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","file":"static/js/main.d4adf672.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { IconButton, useColorMode } from \"@chakra-ui/core\";\n\nfunction ColorModeToggle() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <header>\n      <IconButton\n        onClick={toggleColorMode}\n        icon={colorMode === \"light\" ? \"moon\" : \"sun\"}\n        variantColor=\"blue\"\n        aria-label={`Change to ${\n          colorMode === \"light\" ? \"dark\" : \"light\"\n        } mode`}\n      />\n    </header>\n  );\n}\n\nexport default ColorModeToggle;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Checkbox,\n  List,\n  ListItem,\n  Link,\n  // Icon,\n  AccordionItem,\n  AccordionHeader,\n  AccordionPanel,\n  AccordionIcon,\n  Heading,\n  Flex,\n  useColorMode\n} from \"@chakra-ui/core\";\n\nfunction TopicalHeading({ heading, count, listItems, onCheck }) {\n  const [isExpanded, setIsExpanded] = useState(() => false);\n  const [checkedItems, setCheckedItems] = useState(\n    listItems.map(({ key }) => localStorage.getItem(key))\n  );\n\n  function updateCheckedItems(arr, key, checked) {\n    onCheck(key, checked);\n    setCheckedItems(arr);\n  }\n\n  const allChecked = checkedItems.every(Boolean);\n  const isIndeterminate = checkedItems.some(Boolean) && !allChecked;\n\n  const { colorMode } = useColorMode();\n\n  return (\n    <AccordionItem onChange={() => setIsExpanded(!isExpanded)}>\n      <AccordionHeader>\n        <Box flex=\"1\" textAlign=\"left\">\n          <Flex>\n            <Checkbox\n              pr={3}\n              isChecked={allChecked}\n              isIndeterminate={isIndeterminate}\n              onChange={e =>\n                setCheckedItems(\n                  listItems.map(({ key }) => {\n                    onCheck(key, e.target.checked);\n                    return e.target.checked;\n                  })\n                )\n              }\n            />\n            <Heading as=\"h2\" size=\"lg\">\n              {heading} <span>{checkedItems.filter(Boolean).length}</span>/\n              <span>{count}</span>\n            </Heading>\n          </Flex>\n        </Box>\n        <AccordionIcon />\n      </AccordionHeader>\n\n      {isExpanded ? (\n        <AccordionPanel pb={4}>\n          <List spacing={1} style={{ marginLeft: \"25px\" }}>\n            {listItems.map((li, i) => {\n              return (\n                <ListItem key={li.key}>\n                  <Checkbox\n                    key={li.key}\n                    isChecked={checkedItems[i]}\n                    onChange={e =>\n                      updateCheckedItems(\n                        checkedItems.map((item, j) =>\n                          i === j ? e.target.checked : item\n                        ),\n                        li.key,\n                        e.target.checked\n                      )\n                    }\n                  >\n                    {li.nodes.map(node => {\n                      if (node.tag === \"A\") {\n                        return (\n                          <Link\n                            color={\n                              colorMode === \"dark\" ? \"blue.300\" : \"blue.500\"\n                            }\n                            key={node.href}\n                            isExternal\n                            href={node.href}\n                          >\n                            {node.text}\n                            {/* <Icon name=\"external-link\" mx=\"2px\" /> */}\n                          </Link>\n                        );\n                      } else return node.text;\n                    })}\n                  </Checkbox>\n                </ListItem>\n              );\n            })}\n          </List>\n        </AccordionPanel>\n      ) : null}\n    </AccordionItem>\n  );\n}\n\nexport default TopicalHeading;\n","import React from \"react\";\nimport { useColorMode, useTheme } from \"@chakra-ui/core\";\n\nfunction Page({ children }) {\n  const { colorMode } = useColorMode();\n  const theme = useTheme();\n  const bgColor = {\n    light: theme.colors.white,\n    dark: theme.colors.gray[\"800\"]\n  };\n  const color = { light: theme.colors.black, dark: theme.colors.white };\n  const style = {\n    background: bgColor[colorMode],\n    color: color[colorMode]\n  };\n  return <div style={style}>{children}</div>;\n}\n\nexport default Page;\n","// https://www.churchofjesuschrist.org/blog/i-studied-more-than-2200-scriptures-about-the-savior-in-six-weeks-here-is-a-little-of-what-i-learned?lang=eng\n// https://www.churchofjesuschrist.org/broadcasts/article/worldwide-devotionals/2017/01/prophets-leadership-and-divine-law?lang=eng\n// https://tech.churchofjesuschrist.org/forum/viewtopic.php?t=28362\n// https://ldsperspectives.com/2019/12/04/jesus-christ-in-the-topical-guide-with-stephanie-dibb-sorensen/\n// https://www.churchofjesuschrist.org/study/general-conference/2017/04/drawing-the-power-of-jesus-christ-into-our-lives?lang=eng\n// https://scriptures.byu.edu/\n// https://www.churchofjesuschrist.org/study/scriptures/tg/jesus-christ?lang=eng\n// https://thirdhour.org/forums/topic/61247-elder-nelsons-2200-scripture-challenge/\n\nimport React from \"react\";\nimport {\n  Accordion,\n  ThemeProvider,\n  CSSReset,\n  ColorModeProvider,\n  Heading,\n  Flex,\n  Link\n} from \"@chakra-ui/core\";\nimport ColorModeToggle from \"./ColorModeToggle\";\nimport TopicalHeading from \"./TopicalHeading\";\nimport Page from \"./Page\";\nimport data from \"./data/output.json\";\n\nfunction onCheck(key, checked) {\n  const storedItem = localStorage.getItem(key);\n  checked && !storedItem\n    ? localStorage.setItem(key, new Date())\n    : localStorage.removeItem(key);\n}\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider>\n        <CSSReset />\n        <ColorModeProvider>\n          <Page>\n            <Heading p={3}>\n              <Flex justify=\"space-between\">\n                <Link\n                  isExternal\n                  href=\"https://www.churchofjesuschrist.org/blog/i-studied-more-than-2200-scriptures-about-the-savior-in-six-weeks-here-is-a-little-of-what-i-learned\"\n                >\n                  Scriptures of Jesus Christ\n                </Link>\n                <ColorModeToggle />\n              </Flex>\n            </Heading>\n            <Accordion>\n              {data.guideRefs.map((guideRef, i) => {\n                return (\n                  <TopicalHeading\n                    key={guideRef.source}\n                    heading={guideRef.display}\n                    count={guideRef.length}\n                    listItems={guideRef.ul}\n                    onCheck={onCheck}\n                  />\n                );\n              })}\n            </Accordion>\n          </Page>\n        </ColorModeProvider>\n      </ThemeProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}